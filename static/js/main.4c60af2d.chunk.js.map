{"version":3,"sources":["styles/general.styled.jsx","components/home/home.styled.jsx","components/home/home.jsx","components/navigation/navigation.styled.jsx","components/navigation/navigation.jsx","components/lecture1/listItem/listItem.styled.jsx","components/lecture1/listItem/listItem.jsx","components/lecture1/modal/modal.styled.jsx","components/lecture1/modal/modal.jsx","components/lecture1/lecture1.styled.jsx","components/lecture1/lecture1.jsx","components/lecture2/input/input.styled.jsx","components/lecture2/input/input.jsx","components/lecture2/helpers.jsx","components/lecture2/lecture2.enum.js","components/lecture2/lecture2.styled.jsx","components/lecture2/lecture2.jsx","App.styled.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Button","styled","button","h2","HomeContainer","div","CircleContainer","WelcomeText","HomeComponent","InteractiveNav","NavLink","L1Nav","L2Nav","L3Nav","HomeNav","NavigationComponent","to","exact","ItemContainer","article","ItemTitle","ItemText","p","ListItemComponent","item","key","id","name","body","ModalContainer","Modal","ModalComponent","props","handleClose","setState","open","onClose","state","this","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","data","map","React","Component","Lecture1Container","OpenButton","Lecture1Component","handleModalOpen","isModalOpened","handleModalClose","fetch","then","res","json","serverJson","slice","onClick","LabeledInput","label","Input","input","InputComponent","labelName","value","type","changeFunc","blurFunc","onChange","onBlur","validateName","error","validateEmail","test","validatePass","length","FormFields","Email","FirstName","Password","ConfirmPassword","Object","freeze","Lecture2Container","FormContainer","Form","form","FormName","FormButton","Link","a","Error","Lecture2Component","handleValidation","event","target","validateField","errorExist","errors","find","err","handleChange","handleSubmit","preventDefault","signin","email","firstName","password","confirmPassword","nameError","push","passError","confirmError","emailError","validateForm","console","log","handleFormSwitch","renderSigninInputs","renderSignupInputs","ActionType","onSubmit","AppContainer","AnimatedSwitch","withRouter","location","TransitionGroup","CSSTransition","classNames","path","component","Home","Lecture1","Lecture2","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4c60af2d.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  background-color: #fff;\n  border: 1px solid #000;\n  border-radius: 35px 25px;\n  box-shadow: 0 2px 10px #000;  \n  line-height: 1.2;\n  text-transform: uppercase;\n  transition: 0.2s;\n  &:hover{\n    border: 1px solid #e7a498;\n    color: #e7a498;\n    cursor: pointer;\n  }\n  &:active {\n    outline: none;\n  }\n`;\nexport const h2 = styled.h2`\n  font-size: 1.125rem;\n  font-weight: 500;\n  line-height: 1.5;\n  text-align: right;\n  text-transform: uppercase;\n`;","import styled from \"styled-components\";\nimport { h2 } from '../../styles/general.styled';\n\nexport const HomeContainer = styled.div`\n  height: 100vh;\n`;\n\nexport const CircleContainer = styled.div`\n  height: 700px;\n  width: 700px;\n  position: absolute;\n  top: 50%;\n  right: 0;\n  transform: translateY(-50%);\n  \n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  background: #ffffff url('https://www.onlygfx.com/wp-content/uploads/2017/07/circle-brush-stroke-7.png') no-repeat center center;\n  background-size: contain;\n  border-radius: 50%;\n`;\n\nexport const WelcomeText = styled(h2)`\n  width: 60%;\n  background: #fff;\n`;\n\n","import React from 'react';\n// Components\nimport { Navigation } from '../../components';\n// Styles\nimport {\n  HomeContainer,\n  CircleContainer,\n  WelcomeText,\n} from './home.styled';\n\nconst HomeComponent = () => {\n  return (\n    <HomeContainer>\n      <CircleContainer>\n        <WelcomeText>Don't you want to hover me?</WelcomeText>\n        <Navigation />\n      </CircleContainer>\n    </HomeContainer>\n  );\n}\n\nexport default HomeComponent;\n","import styled from \"styled-components\";\nimport {CircleContainer} from \"../home/home.styled\";\nimport {NavLink} from \"react-router-dom\";\n\nconst InteractiveNav = styled(NavLink)`\n  height: 150px;\n  width: 150px;\n  position: absolute;\n  top: 50%;\n  right: 350px;\n  transform: translateY(-50%);\n  \n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  background: url('https://www.onlygfx.com/wp-content/uploads/2017/07/circle-brush-stroke-7.png') no-repeat center center;\n  background-size: contain;\n  border-radius: 50%;\n  color: #000;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.2;\n  text-decoration: none;\n  text-transform: uppercase;\n  transition: 0.5s;\n  transform: scale(0);\n`;\n\nexport const L1Nav = styled(InteractiveNav)`\n  ${CircleContainer}:hover & {\n    top: 80%;\n    right: 590px;\n    transform: scale(1);\n  }\n`;\nexport const L2Nav = styled(InteractiveNav)`\n  ${CircleContainer}:hover & {\n    top: 60%;\n    right: 670px;\n    transform: scale(1);\n  }\n`;\nexport const L3Nav = styled(InteractiveNav)`\n  ${CircleContainer}:hover & {\n    top: 38%;\n    right: 690px;\n    transform: scale(1);\n  }\n`;\nexport const HomeNav = styled(InteractiveNav)`\n  ${CircleContainer}:hover & {\n    top: 93%;\n    right: 470px;\n    transform: scale(1);\n  }\n`;","import React from 'react';\n// Styles\nimport { HomeNav, L1Nav, L2Nav, L3Nav } from \"./navigation.styled\";\n\nconst NavigationComponent = () => {\n  return (\n    <>\n      <L1Nav to=\"/lecture1\">lecture 1</L1Nav>\n      <L2Nav to=\"/lecture2\">lecture 2</L2Nav>\n      <L3Nav to=\"/lecture3\">lecture 3</L3Nav>\n      <HomeNav exact to=\"/\">home</HomeNav>\n    </>\n  );\n};\n\nexport default NavigationComponent;\n","import styled from \"styled-components\";\n\nexport const ItemContainer = styled.article`\n  width: 60vw;\n  padding: 10px;\n  margin: 10px 0;\n  background-color: white;\n  box-shadow: 0px 0px 10px #000;\n`;\n\nexport const ItemTitle = styled.h2``;\n\nexport const ItemText = styled.p``;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n// Styles\nimport { ItemContainer, ItemTitle, ItemText } from './listItem.styled';\n\nexport const ListItemComponent = ({ item }) => {\n  return (\n    <ItemContainer key={item.id}>\n      <ItemTitle>{item.id} - {item.name}</ItemTitle>\n      <ItemText>{item.body}</ItemText>\n    </ItemContainer>\n  );\n}\n\nListItemComponent.propTypes = {\n  item: PropTypes.shape({\n    postId: PropTypes.number,\n    id: PropTypes.number,\n    name: PropTypes.string,\n    email: PropTypes.string,\n    body: PropTypes.string,\n  })\n};\n","import styled from \"styled-components\";\nimport Modal from '@material-ui/core/Modal';\n\nexport const ModalContainer = styled(Modal)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  overflow: scroll;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Material\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n// Components\nimport { ListItemComponent as ListItem } from '../listItem/listItem';\n// Styles\nimport { ModalContainer } from './modal.styled';\n\nexport class ModalComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: true,\n    };\n  }\n\n  handleClose = () => {\n    this.setState({ open: false });\n    this.props.onClose();\n  };\n\n  render () {\n    const { open } = this.state;\n    return (\n      <ModalContainer\n        open={open}\n        onClose={this.handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{ timeout: 500 }}\n      >\n        <Fade in={open}>\n          <>\n            {this.props.data?.map(item => (\n              <ListItem key={item.id} item={item}/>\n            ))}\n          </>\n        </Fade>\n      </ModalContainer>\n    )\n  }\n}\n\nModalComponent.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      postId: PropTypes.number,\n      id: PropTypes.number,\n      name: PropTypes.string,\n      email: PropTypes.string,\n      body: PropTypes.string,\n    })\n  ),\n};\n","import styled from \"styled-components\";\nimport { Button } from '../../styles/general.styled';\n\nexport const Lecture1Container = styled.div`\n  height: 100vh;\n`;\nexport const OpenButton = styled(Button)`\n  padding: 15px 40px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 1.2rem;\n  font-weight: 600;\n`;","import React from 'react';\n// Components\nimport { ModalComponent as Modal } from './modal/modal';\n// Styles\nimport { Lecture1Container, OpenButton } from './lecture1.styled';\n\nclass Lecture1Component extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpened: false,\n      data: []\n    };\n  }\n\n  async componentDidMount() {\n    await fetch('https://jsonplaceholder.typicode.com/comments')\n      .then(res => res.json())\n      .then(serverJson => this.setState({ data: [...serverJson].slice(0, 10) }))\n  }\n\n  handleModalOpen = () => {\n    !this.state.isModalOpened && this.setState({ isModalOpened: true })\n  }\n\n  handleModalClose = () => {\n    this.state.isModalOpened && this.setState({ isModalOpened: false })\n  }\n\n  render () {\n    const { isModalOpened, data } = this.state;\n    return (\n      <Lecture1Container>\n        <OpenButton onClick={this.handleModalOpen}>Open Comments</OpenButton>\n        { isModalOpened && <Modal data={data} onClose={this.handleModalClose} /> }\n      </Lecture1Container>\n    )\n  }\n}\n\nexport default Lecture1Component;\n","import styled from 'styled-components';\n\nexport const LabeledInput = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem;\n  color: #000;\n  font-size: 0.8rem;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 0.5rem 0;\n  border: none;\n  border-bottom: 1px solid #000;\n  font-size: 0.9rem;\n  &:focus {\n    border-bottom: 1px solid #e7a498;\n  }\n`;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n// Styles\nimport { LabeledInput, Input } from './input.styled';\n\nexport const InputComponent = ({ labelName, value, type, changeFunc, blurFunc }) => {\n  return (\n    <LabeledInput>\n      {labelName}:\n      <Input type={type} value={value} onChange={changeFunc} onBlur={blurFunc}/>\n    </LabeledInput>\n  );\n};\n\nInputComponent.propTypes = {\n  labelName: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  changeFunc: PropTypes.func.isRequired,\n  blurFunc: PropTypes.func,\n};\n","function validateName(value) {\n  let error;\n\n  if (!value) {\n    error = 'Your name is required';\n  }\n\n  return error;\n}\n\nfunction validateEmail(value) {\n  let error;\n\n  if (!value) {\n    error = 'Email is required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)) {\n    error = 'Invalid email address';\n  }\n\n  return error;\n}\n\nfunction validatePass(value) {\n  let error;\n\n  if (!value) {\n    error = 'Password is required';\n  } else if (value.length > 6) {\n    error = 'Password should be at least 6 characters';\n  }\n\n  return error;\n}\n\nexport const validateField = (name, value) => {\n  switch (name) {\n    case 'firstName':\n      return validateName(value);\n    case 'email':\n      return validateEmail(value);\n    case 'password':\n      return validatePass(value);\n    default:\n      return null;\n  }\n}\n\nexport const validateForm = ( signin, email, firstName, password, confirmPassword ) => {\n  const errors = [];\n\n  if (!signin) {\n    const nameError = validateName(firstName);\n    nameError && errors.push(nameError);\n\n    const passError = validatePass(password);\n    passError && errors.push(passError);\n\n    const confirmError = password !== confirmPassword ? 'Passwords don\\'t match': '';\n    confirmError && errors.push(confirmError);\n  }\n  const emailError = validateEmail(email);\n  emailError && errors.push(emailError);\n\n  return errors;\n};","export const FormFields = {\n  Email: 'email',\n  FirstName: 'firstName',\n  Password: 'password',\n  ConfirmPassword: 'confirmPassword',\n};\n\nObject.freeze(FormFields);","import styled from 'styled-components';\nimport { Button, h2 } from '../../styles/general.styled';\n\nexport const Lecture2Container = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const FormContainer = styled.div`\n  width: 400px;\n  padding: 30px;\n  border-radius: 35px 25px;\n  box-shadow: 0 2px 10px #000;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormName = styled(h2)`\n  margin-bottom: 1rem;\n`;\n\nexport const FormButton = styled(Button)`\n  margin-bottom: 1rem;\n  padding: 10px;\n  font-size: 0.9rem;\n`;\n\nexport const Link = styled.a`\n  font-size: 0.9rem;\n  text-decoration: underline;\n  transition: 0.2s;\n  &:hover{\n    color: #e7a498;\n    cursor: pointer;\n  }\n`;\n\nexport const Error = styled.div`\n  margin-bottom: 1rem;\n  padding: 0.5rem 0;\n  color: red;\n  border-bottom: 1px solid red;\n  font-size: 0.8rem;\n  text-transform: uppercase;\n`;\n","import React from 'react';\n// Components\nimport { InputComponent as Input } from './input/input';\n// Helpers\nimport { validateField, validateForm } from './helpers';\n// Constants\nimport { FormFields } from './lecture2.enum';\n// Styles\nimport {\n  Lecture2Container,\n  FormContainer,\n  Form,\n  FormName,\n  FormButton,\n  Link,\n  Error\n} from './lecture2.styled';\n\nclass Lecture2Component extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signin: true,\n      [FormFields.Email]: '',\n      [FormFields.FirstName]: '',\n      [FormFields.Password]: '',\n      [FormFields.ConfirmPassword]: '',\n      errors: [],\n    };\n  }\n\n  handleValidation = (name) => {\n    return (event) => {\n      const value = event.target.value;\n      const error = validateField(name, value);\n      const errorExist = !!this.state.errors.find(err => err === error);\n      if (error) {\n        this.setState({\n          errors: !errorExist ? [...this.state.errors, error] : this.state.errors\n        })\n      }\n      if (!error) {\n        this.setState({\n          errors: []\n        })\n      }\n    }\n  }\n\n  handleChange = (name) => {\n    return (event) => {\n      this.setState({\n        [name]: event.target.value\n      });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { signin, email, firstName, password, confirmPassword } = this.state;\n    const errors = validateForm(signin, email, firstName, password, confirmPassword);\n    if (errors.length > 0) {\n      this.setState({errors});\n      return;\n    };\n    this.setState({\n      email: '',\n      firstName: '',\n      password: null,\n      confirmPassword: null,\n      errors: [],\n    });\n    console.log('A form was submitted', this.state);\n  }\n\n  handleFormSwitch = () => {\n    this.state.errors.length > 0 && this.setState({ errors: [] });\n    this.state.signin ?\n    this.setState({ signin: false }) :\n    this.setState({ signin: true })\n  }\n\n  renderSigninInputs = () => {\n    return (\n      <Input\n        labelName='Email'\n        type='email'\n        value={this.state[FormFields.Email]}\n        changeFunc={this.handleChange(FormFields.Email)}\n        blurFunc={this.handleValidation(FormFields.Email)}\n      />\n    )\n  }\n\n  renderSignupInputs = () => {\n    return (\n      <>\n        <Input\n          labelName='Your name'\n          type='text'\n          value={this.state[FormFields.FirstName]}\n          changeFunc={this.handleChange(FormFields.FirstName)}\n          blurFunc={this.handleValidation(FormFields.FirstName)}\n        />\n        <Input\n          labelName='Email'\n          type='email'\n          value={this.state[FormFields.Email]}\n          changeFunc={this.handleChange(FormFields.Email)}\n          blurFunc={this.handleValidation(FormFields.Email)}\n        />\n        <Input\n          labelName='Password'\n          type='password'\n          value={this.state[FormFields.Password]}\n          changeFunc={this.handleChange(FormFields.Password)}\n          blurFunc={this.handleValidation(FormFields.Password)}\n        />\n        <Input\n          labelName='Re-enter Password'\n          type='password'\n          value={this.state[FormFields.ConfirmPassword]}\n          changeFunc={this.handleChange(FormFields.ConfirmPassword)}\n        />\n      </>\n    )\n  }\n\n  render () {\n    const { signin, errors } = this.state;\n    const ActionType = signin ? 'Sign In' : 'Create Account';\n    return (\n      <Lecture2Container>\n        <FormContainer>\n          <Form onSubmit={this.handleSubmit}>\n            <FormName>{ActionType}</FormName>\n            {\n              errors.length > 0 ?\n              errors.map(err => <Error key={err}>{err}</Error>) :\n              null\n            }\n            {\n              signin ?\n              this.renderSigninInputs() :\n              this.renderSignupInputs()\n            }\n            <FormButton type='submit'>{ActionType}</FormButton>\n          </Form>\n          {\n            signin ?\n            <Link onClick={this.handleFormSwitch}>Create account instead</Link> :\n            <Link onClick={this.handleFormSwitch}>Already have an account? Sign in</Link>\n          }\n        </FormContainer>\n      </Lecture2Container>\n    );\n  };\n};\n\nexport default Lecture2Component;\n","import styled from \"styled-components\";\n\nexport const AppContainer = styled.div`\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n`;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, withRouter } from \"react-router-dom\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n// Components\nimport { Home, Lecture1, Lecture2 } from \"./components\";\n// Styles\nimport { AppContainer } from './App.styled';\n\nconst AnimatedSwitch = withRouter(({ location }) => (\n  <TransitionGroup>\n    <CSSTransition key={location.key} classNames=\"page\" timeout={1000}>\n      <Switch location={location}>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/lecture1\" component={Lecture1} />\n        <Route path=\"/lecture2\" component={Lecture2} />\n      </Switch>\n    </CSSTransition>\n  </TransitionGroup>\n));\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <AppContainer>\n        <AnimatedSwitch />\n      </AppContainer>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}